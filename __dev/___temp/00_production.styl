
$iconsCount = 3
$$icons = {
	's-fb-footer': 0px 0px 0px 0px 30px 30px 80px 80px 'images/icons/__sprite.png'
	's-twitter-footer': 50px 0px -50px 0px 30px 30px 80px 80px 'images/icons/__sprite.png'
	's-vk-footer': 0px 50px 0px -50px 30px 30px 80px 80px 'images/icons/__sprite.png'
}
$spritesCount = 14
$$sprite = {
	's-arrow-right': 217px 40px -217px -40px 18px 16px 236px 160px 'images/sprites/__sprite.png'
	's-aside-nav-triangle-1': 180px 0px -180px 0px 17px 46px 236px 160px 'images/sprites/__sprite.png'
	's-aside-nav-triangle': 180px 66px -180px -66px 17px 46px 236px 160px 'images/sprites/__sprite.png'
	's-cutlery-green': 65px 0px -65px 0px 45px 45px 236px 160px 'images/sprites/__sprite.png'
	's-fb-footer-hover': 65px 65px -65px -65px 30px 30px 236px 160px 'images/sprites/__sprite.png'
	's-fb-footer': 130px 0px -130px 0px 30px 30px 236px 160px 'images/sprites/__sprite.png'
	's-hat-green': 0px 0px 0px 0px 45px 45px 236px 160px 'images/sprites/__sprite.png'
	's-login': 217px 0px -217px 0px 19px 20px 236px 160px 'images/sprites/__sprite.png'
	's-pad-green': 0px 65px 0px -65px 45px 45px 236px 160px 'images/sprites/__sprite.png'
	's-search-red': 217px 76px -217px -76px 16px 16px 236px 160px 'images/sprites/__sprite.png'
	's-twitter-footer-hover': 130px 50px -130px -50px 30px 30px 236px 160px 'images/sprites/__sprite.png'
	's-twitter-footer': 100px 130px -100px -130px 30px 30px 236px 160px 'images/sprites/__sprite.png'
	's-vk-footer-hover': 0px 130px 0px -130px 30px 30px 236px 160px 'images/sprites/__sprite.png'
	's-vk-footer': 50px 130px -50px -130px 30px 30px 236px 160px 'images/sprites/__sprite.png'
}
// BASE
TITLE_CLASS = 'title'

// Paths
IMAGES_PATH = 'images/'
LIBS_PATH = 'scripts/libs/'
STYLES_PATH = 'styles/'

DEFAULT_WIDTH = 1200px

MEDIA_MARGIN = 30px

// LAYOUT
WRAPPER_PADDING = 20px
WRAPPER_PADDING_PHONE = 10px
WRAPPER_WIDTH = 1200px

WRAPPER_MIN_WIDTH = 300px
WRAPPER_MAX_WIDTH = WRAPPER_WIDTH + (WRAPPER_PADDING*2)

// TEXT
BASE_SIZE = 16px

MOBILE_SIZE = 16px

FONT_SIZE = BASE_SIZE
LINE_HEIGHT = 30px
LINE_HEIGHT = unit(round(LINE_HEIGHT/FONT_SIZE, 3), '')

FONT_COLOR = #242424


MAIN_COLOR = #006298

LINK_COLOR = MAIN_COLOR
LINK_COLOR_HOVER = MAIN_COLOR + 40%

LINK_COLOR_INVERT = FONT_COLOR
LINK_COLOR_INVERT_HOVER = LINK_COLOR

TEXT_LINK_COLOR = LINK_COLOR
TEXT_LINK_COLOR_HOVER = LINK_COLOR_HOVER

SELECT_COLOR = MAIN_COLOR


ERROR_COLOR = #FF5959
ERROR_BORDER_COLOR = #FF5959

GOOD_COLOR = #44cd5e
GOOD_BORDER_COLOR = #44cd5e

BACKGROUND_COLOR = #f5f5f5

// OTHER
TRANS_SPEED = 0.2s

FORM_ITEM_MARGIN = 20px

COLUMN_MARGIN = 20px

ENABLE_REM_POLYFILL = false


BASE_WIDTH = 2560


SCREENS = VARS.SCREENS


COLORS = {
	base: MAIN_COLOR,
	light: #e7f0f7,
	banners-item-box: #667c87,
	button-style2: {
		background: #f9a62c,
		color: #000000
	},
	similarFlatButton: #b7312c,
	progress: #d5e1ef
}


getColor(name, subname = false)
	if subname
		return COLORS[name][subname];
	else
		return COLORS[name];


INPUT_SIZE = {
	default: {
		font-size: 16px,
		height: 60px
	}
}
__customthis = false
this()
	// p(__customthis)
	if __customthis != false
		return __customthis
	return selector()

reset-this()
	__customthis = false

set-this(_selector)
	__customthis = _selector

// __options = {
// 	type: 'set-options',
// 	value: {BASE_SIZE: BASE_SIZE, RESPONSIVE_START_WIDTH: RESPONSIVE_START_WIDTH, RESPONSIVE_END_WIDTH: RESPONSIVE_END_WIDTH, RESPONSIVE_AUTO_ACCURACY: RESPONSIVE_AUTO_ACCURACY}
// }
// __addAdaptiveProperty(__options)

add-adaptive-property(prop, value)
	if ENABLE_REM_POLYFILL
		__add = {type: 'add', value: {selector: selector(), property: prop, value: value}}
		// __addAdaptiveProperty(__add)
		if(__ADAPTIVE_PROPERTIES[selector()] == null)
			__ADAPTIVE_PROPERTIES[selector()] = 0
		push(__ADAPTIVE_PROPERTIES[selector()], {property: prop, value: value})

set-html-font-size(val)
	html
		font-size val

set-polyfill-adaptive(val)
	if !ENABLE_REM_POLYFILL
		return
	for _selector, props in __ADAPTIVE_PROPERTIES
		// p(_selector)
		{ selector('html.modernizr-no-cssremunit', _selector) }
			for prop in props
				if prop != 0
					if length(prop['value']) > 1
						_newValues = ()
						for _val, index in prop['value']
							push(_newValues, unrem(_val, val))
						add-property( prop['property'], _newValues )
						// { prop['property'] } _newValues
					else
						add-property( prop['property'], unrem(prop['value'], val) )


__INLINE_MEDIA_LIST = ( 0 )

_on-width(args...)
	push(__INLINE_MEDIA_LIST, {selector: selector(), query: args})
	return

render_on-width()
	for query in __INLINE_MEDIA_LIST
		p(query)

content-center(w = 100%, h = w, important = false )
	important = (important == true ? !important : )
	position relative
	width w important
	height h important

	> *
		position absolute
		top 0 important
		bottom 0 important
		left 0 important
		right 0 important
		margin auto important
		max-height 100%
		max-width 100%


isNumber(val)
	if( !(val < 0 || val >= 0) && val != 'auto' && val != 'none' )
		false
	else
		true

allIsNumber(vals)
	all = true
	for _val in vals
		all = all && isNumber(_val)
	return all

border-box()
	box-sizing padding-box
	box-sizing border-box
	
background-clip()
	background-clip padding-box



// in css -> width-perc(15)
width-perc(perc)
	.perc-{perc}
		width: (perc)%
		
anim-link(type = $type_anim_link)
	position relative
	text-decoration none !important
	overflow hidden
	
	if( type == 1)
		&:after
			content ''
			display block
			position absolute
			bottom 0
			left 0
			size(100%, 0)
			max-width 100%
			border-bottom 1px solid
			trans()
			
		&:hover
			&:after
				size(0)
		
	if (type == 2)
		&:after,
		&:before
			content ''
			display block
			position absolute
			bottom 0
			size(50%, 0)
			max-width 50%
			border-bottom 1px solid
			trans()
		&:after
			right 0
		&:before
			left 0
			
		&:hover
			text-decoration none
			&:after,
			&:before
				size(0)
	
	if( type == 3)
		&:after
			content ''
			display block
			position absolute
			bottom 0
			left 0
			right 0
			margin auto
			size(100%, 0)
			max-width 100%
			border-bottom 1px solid
			trans()
			
		&:hover
			&:after
				size(0)

Button(params, btnName = '')
	_bg = params.background
	_color = params.color
	_bgHover = params.hover.background
	_colorHover = params.hover.color
	_bgActive = params.active.background
	_colorActive = params.active.color
	_colorName = ''
	if(btnName != '')
		_colorName = '="' + btnName + '"'
		btnName = '.__' + btnName
	else
		_colorName = ""

	&{btnName},
	&[data-button-color{ _colorName }]
		background-color _bg
		color _color

	&{btnName}:hover,
	&{btnName}:focus,
	&[data-button-color{ _colorName }]:hover,
	&[data-button-color{ _colorName }]:focus
		if(_bgHover)
			background-color _bgHover
		if(_colorHover)
			color _colorHover
	&{btnName}:active,
	&[data-button-color{ _colorName }]:active
		if(_bgActive)
			background-color _bgActive
		if(_colorActive)
			color _colorActive

	&{btnName}[disabled],
	&{btnName}.disabled,
	&{btnName}.__loading
		background-color _bg !important
		color _color !important

	&[data-button-color{ _colorName }].__border,
	&{btnName}.__border
		background-color transparent
		color _bg
		_borderColor = _bg
		if( params.border && params.border['border-color'] )
			_borderColor = params.border['border-color']
		border 2px solid _borderColor
		&:hover,
		&:focus
			_borderColor = _bgHover
			if( params.border && params.border.hover && params.border.hover['border-color'] )
				_borderColor = params.border.hover['border-color']
			color _colorHover
			border-color _bgHover
			background-color _bgHover
		&:active
			_borderColor = _bgActive
			if( params.border && params.border.active && params.border.active['border-color'] )
				_borderColor = params.border.active['border-color']
			color _colorActive
			border-color _bgActive
			background-color _bgActive
		&[disabled],
		&.__loading,
		&.disabled
			background-color #fff !important
			border-color _bg !important
Buttons(styles)
	for _btnName, _btnParams in styles
		if(_btnName == 'default')
			_btnName = ''
		Button(_btnParams, _btnName )


replace(expr, str, val)
	expr = "'" + clone(expr) + "'"
	// return typeof(expr)
	for e, i in expr
		if str == e
			expr[i] = val
	return expr

catStr(str, start, end = false)
	// res = ''
	res = ''
	_str = "'" + str + "'"
	return _str[0][0]
	return length(_str[0][0])
	for i in _str
		res = res + ' ' + i
		if i >= start
			if(end == false || i < end)
				res = res + _str[i]
	return res

rem(val)
	// p(selector())
	// p(called-from)
	// p(val)
	// _selector = selector()
	// add-adaptive-property

	_rem = (round((val/BASE_SIZE)*1000)/1000)rem
	if ENABLE_REM_POLYFILL
		if __ADAPTIVE_PROPERTIES__DEFAULTS[current-property[0]]
			add-property(current-property[0], val)
			add-adaptive-property(current-property[0], _rem)

	return _rem

unrem(val, _size = BASE_SIZE)
	if(unit(val) == 'rem')
		return (round((val*_size)*10)/10)px
	else
		return val

isRem(val)
	// p(val)
	// p(typeof(val) + ' ' + (typeof(val) == 'unit'))
	// // p(unit(val))
	// // return
	if(typeof(val) != 'unit')
		return false
	if(unit(val) != 'rem')
		return false
	return true

remExis(values)
	for val in values
		if(isRem(val))
			return true
	return false

allIsRem(values)
	for val in values
		if(!isRem(val))
			return false
	return true

ifLandscape(minWidth = 0, maxWidth = 0)
	if(minWidth > 0 && maxWidth > 0)
		@media screen and (min-width: minWidth) and (max-width: maxWidth) and (orientation: landscape)
			{block}
	else
		if(minWidth > 0)
			@media screen and (min-width: minWidth) and (orientation: landscape)
				{block}
		else
			if(maxWidth > 0)
				@media screen and (max-width: maxWidth) and (orientation: landscape)
					{block}
			else
				@media screen and (orientation: landscape)
					{block}

screenWidth(minWidth = 0, maxWidth = 0)
	if(minWidth > 0 && maxWidth > 0)
		@media screen and (min-width: minWidth) and (max-width: maxWidth)
			{block}
	else
		if(minWidth > 0)
			@media screen and (min-width: minWidth)
				{block}
		else
			if(maxWidth > 0)
				@media screen and (max-width: maxWidth)
					{block}

STYLES(file)
	return STYLES_PATH + file
LIBS(file)
	return LIBS_PATH + file
IMAGES(file)
	return IMAGES_PATH + file

// in css -> images("test.png")
images(file)
	return url( IMAGES( file ) )


autoResponse()
	_lastFont = {}

	_countResponse = ( 0 )
	_start = RESPONSIVE_END_WIDTH
	_end = RESPONSIVE_START_WIDTH

	_lastWidth = (0)
	for i in _start.._end
		newSize =  BASE_SIZE*(i/RESPONSIVE_START_WIDTH)
		newSize = round( newSize*RESPONSIVE_AUTO_ACCURACY )/RESPONSIVE_AUTO_ACCURACY
		newSize = round( newSize*10 )/10
		if(!_lastFont[newSize])
			_countResponse[0] = _countResponse[0] + 1
			_lastFont[newSize] = true
			if _lastWidth[0] == 0
				@media screen and (max-width: ( (i - 1)px) ) and (min-aspect-ratio: 14/9)
					set-html-font-size(newSize)
			else
				@media screen and (min-width: ( (_lastWidth[0])px) ) and (max-width: ( (i - 1)px) ) and (min-aspect-ratio: 14/9)
					set-html-font-size(newSize)
			_lastWidth[0] = i
	p('\nTotal breakpoints: ' + _countResponse[0] + '\n')


_Sprite($$arr, name, spriteName, width = false, height = false)
	$sprite = $$arr[ 's-' + spriteName]
	if $sprite == null
		p( '\n\n\n    ' + name + ' "' + spriteName + '" not found in: \n\n    ' + selector() + '\n\n\n')
		return
	else
		_isDefaultWidth = false
		_isDefaultHeight = false

		_defaultWidth = $sprite[4]
		_defaultHeight = $sprite[5]

		if width == false
			width = _defaultWidth
			_isDefaultWidth = true

		if height == false
			height = _defaultHeight
			_isDefaultHeight = true

		_widthKoef = width/_defaultWidth
		_heightKoef = height/_defaultHeight

		if _isDefaultHeight && !_isDefaultWidth
			_heightKoef = _widthKoef
			height = height*_heightKoef

		if !_isDefaultHeight && _isDefaultWidth
			_widthKoef = _heightKoef
			width = width*_widthKoef

		// width = round(width*_widthKoef*1000)/1000
		// height = round(height*_heightKoef*1000)/1000

		_backgroundWidth = $sprite[6]
		_backgroundHeight = $sprite[7]

		_backgroundWidth = _backgroundWidth*_widthKoef
		_backgroundHeight = _backgroundHeight*_heightKoef

		_positionLeft = $sprite[2]
		_positionTop = $sprite[3]

		_positionLeft = _positionLeft*_widthKoef
		_positionTop = _positionTop*_heightKoef

		background-image url($sprite[8])
		width (width)
		height (height)
		background-position (_positionLeft) (_positionTop)
		background-size (_backgroundWidth) (_backgroundHeight)
		background-repeat no-repeat

sprite(spriteName, width = false, height = false)
	_Sprite($$sprite, 'sprite', spriteName, width, height)

icon(spriteName, width = false, height = false)
	_Sprite($$icons, 'icon', spriteName, width, height)

px64()
	_color = (0 0 0)
	for item, index in arguments
		_color[index] = item
	p(_color)
	s(__px64(_color))



MEDIA( type, onlyThis = false )
	_currentIndex = -1
	_currentValue = 0
	for _screen, index in SCREENS
		if _screen[0] == type
			_currentIndex = index
			_currentValue = _screen[1]
	if _currentIndex == -1
		error("SCREEN " + type + " not found in " + SCREENS)
	_type = _currentIndex == 0 ? 'min-width' : 'max-width'
	CURRENT_MEDIA_WIDTH = _currentValue

	if(onlyThis && _currentIndex != 0 && _currentIndex != (length(SCREENS) - 1))
		@media screen and (min-width: unit(SCREENS[ _currentIndex + 1 ][1] + 1, 'px')) and (max-width: unit(_currentValue, 'px'))
			{block}
	else
		@media screen and ({_type}: unit(_currentValue, 'px'))
			{block}

	CURRENT_MEDIA_WIDTH = 0
MIN_MEDIA(type)
	_currentIndex = -1
	_currentValue = 0
	for _screen, index in SCREENS
		if index < (length(SCREENS) - 2) && _screen[0] == type
			_currentIndex = index
			_currentValue = (SCREENS[index + 1][1] + 1)

	_type = 'min-width'

	CURRENT_MEDIA_WIDTH = _currentValue

	if _currentIndex != -1
		@media screen and ({_type}: unit(_currentValue, 'px'))
			{block}

	CURRENT_MEDIA_WIDTH = 0

MEDIA_WIDTH(type, margin)
	_currentIndex = -1
	_currentValue = 0
	for _screen, index in SCREENS
		if _screen[0] == type
			_currentIndex = index
			_currentValue = _screen[1]
	if _currentIndex == -1
		error("SCREEN " + type + " not found in " + SCREENS)
	_type = _currentIndex == 0 ? 'min-width' : 'max-width'
	if margin
		return _currentValue - MEDIA_MARGIN
	else
		return _currentValue


reset-wrapper-content(inner = true)
	_values = 
		padding-left 0
		padding-right 0
		max-width none
		min-width 0
		width auto
	_selector = '.wrapper-content'

	if(true)
		> .wrapper-content
			{_values}
	else
		.wrapper-content
			{_values}



// in css -> text-ellipsis(100px) or text-ellipsis(80%)
_text-overflow(width_value = 'none')
	white-space: nowrap
	text-overflow: ellipsis
	line-height: normal;
	overflow: hidden
	if width_value != 'none'
		width: width_value
	else
		max-width 100%


getInputSize(sizes)
	_lineHeight = 1.2
	return {
		font-size: sizes['font-size'],
		line-height: _lineHeight,
		height: sizes['height'],
		padding-top: round((sizes['height'] - (sizes['font-size']*_lineHeight))/2),
		padding-bottom: round((sizes['height'] - (sizes['font-size']*_lineHeight))/2)
	}

placeholder(opacity, color)
	&::-webkit-input-placeholder
		opacity opacity
		color color
	&:-ms-input-placeholder
		opacity opacity
		color color
	&::-moz-placeholder
		opacity opacity
		color color
$button()
	[type="submit"],
	[type="button"],
	[type="reset"],
	button
		{block}

button()
	return selector('&', '[type="submit"], [type="button"], [type="reset"], button')

all_button()
	return selector('&', '[type="submit"], [type="button"], [type="reset"], button, [data-button]')

textbox(onlyInput = false)
	if onlyInput
		return selector('&', '[type="text"], textarea, [type="password"], [type="date"], [type="datetine"], [type="email"], [type="number"], [type="search"], [type="time"], [type="tel"], [type="month"], [type="week"], .input-style')
	return selector('&', '[type="text"], select, textarea, [type="password"], [type="date"], [type="datetine"], [type="email"], [type="number"], [type="search"], [type="time"], [type="tel"], [type="month"], [type="week"], .ui-selectmenu-button, .input-style')

$textbox(onlyInput = false)
	if(onlyInput)
		[type="text"], textarea,
		[type="password"], [type="date"],
		[type="datetine"], [type="email"],
		[type="number"], [type="search"],
		[type="time"], [type="tel"],
		[type="month"], [type="week"],
		.input-style
			{block}
	else
		[type="text"], select, textarea,
		[type="password"], [type="date"],
		[type="datetine"], [type="email"],
		[type="number"], [type="search"],
		[type="time"], [type="tel"],
		[type="month"], [type="week"],
		.ui-selectmenu-button,
		.input-style
			{block}

$hN(n)
	h{ n },
	.{ TITLE_CLASS }-{n}
		{block}

$title()
	h{ 1 },
	.{ TITLE_CLASS }-{1},
	h{ 2 },
	.{ TITLE_CLASS }-{2},
	h{ 3 },
	.{ TITLE_CLASS }-{3},
	h{ 4 },
	.{ TITLE_CLASS }-{4},
	h{ 5 },
	.{ TITLE_CLASS }-{5},
	h{ 6 },
	.{ TITLE_CLASS }-{6}
		{block}

$h1()
	+$hN(1)
		{block}
$h2()
	+$hN(2)
		{block}
$h3()
	+$hN(3)
		{block}
$h4()
	+$hN(4)
		{block}
$h5()
	+$hN(5)
		{block}
$h6()
	+$hN(6)
		{block}
$title-1()
	.{ TITLE_CLASS }-1
		{block}
$title-2()
	.{ TITLE_CLASS }-2
		{block}
$title-3()
	.{ TITLE_CLASS }-3
		{block}
$title-4()
	.{ TITLE_CLASS }-4
		{block}
$title-5()
	.{ TITLE_CLASS }-5
		{block}
$title-6()
	.{ TITLE_CLASS }-6
		{block}
$title-all()
	.{ TITLE_CLASS }-1,
	.{ TITLE_CLASS }-2,
	.{ TITLE_CLASS }-3,
	.{ TITLE_CLASS }-4,
	.{ TITLE_CLASS }-5,
	.{ TITLE_CLASS }-6
		{block}
$h-all()
	h1,h2,h3,h4,h5,h6
		{block}


$big()
	.big
		{block}
$small()
	small,
	.small
		{block}
$bold()
	.bold,
	b,
	strong
		{block}
$italic()
	i,
	.italic
		{block}


$_noopacity()
	html.modernizr-no-opacity &
		{block}

$_nofilter()
	html.modernizr-no-cssfilters &
		{block}
$$clear
	&:after
		content ''
		display table
		clear both
		border-spacing 0
		border-collapse collapse
		border 0

clear(arg = false)
	if (arg != false)
		clear arg
	else
		@extend $$clear

$$resetTitle
	font inherit
	color inherit
	border 0
	outline none
	border-radius 0
	text-transform inherit
$$resetStyle
	@extends $$resetTitle
	margin 0
	padding 0
	background transparent

resetStyle()
	&
		@extend $$resetStyle

resetTitle()
	&
		+$title()
			&
				@extend $$resetStyle

$$reset-button
	padding 0
	margin 0
	border 0
	box-shadow none
	background transparent
	outline none
	text-decoration none
	display inline-block
	vertical-align top
	cursor pointer
	text-align center
	user-select none

reset-button()
	@extend $$reset-button

$$trans
	transition all TRANS_SPEED

trans(_speed = false)
	if(!_speed)
		@extend $$trans
	else
		transition all _speed

trans-none()
	transition all 0s
size(_width, _height = _width)
	if isNumber(_width)
		if isRem(_width) && ENABLE_REM_POLYFILL
			width unrem(_width)
			add-adaptive-property('width', _width)
		width _width
	if isNumber(_height)
		if isRem(_height) && ENABLE_REM_POLYFILL
			height unrem(_height)
			add-adaptive-property('height', _height)
		height _height
	// relative-prop('width' width, 'height' height)

max-size(width, height = width)
	if isNumber(width)
		if isRem(width) && ENABLE_REM_POLYFILL
			max-width unrem(width)
			add-adaptive-property('max-width', width)
		max-width width
	if isNumber(height)
		if isRem(height) && ENABLE_REM_POLYFILL
			max-height unrem(height)
			add-adaptive-property('max-height', height)
		max-height height

	// relative-prop('max-width' width, 'max-height' height)

min-size(width, height = width)
	if isNumber(width)
		if isRem(width) && ENABLE_REM_POLYFILL
			min-width unrem(width)
			add-adaptive-property('min-width', width)
		min-width width
	if isNumber(height)
		if isRem(height) && ENABLE_REM_POLYFILL
			min-height unrem(height)
			add-adaptive-property('min-height', height)
		min-height height
	// relative-prop('min-width' width, 'min-height' height)

pos(top, right = top, bottom = top, left = right)
	if isNumber(top)
		if isRem(top) && ENABLE_REM_POLYFILL
			top unrem(top)
			add-adaptive-property('top', top, true)
		top top
	if isNumber(right)
		if isRem(right) && ENABLE_REM_POLYFILL
			right unrem(right)
			add-adaptive-property('right', right)
		right right
	if isNumber(left)
		if isRem(left) && ENABLE_REM_POLYFILL
			left unrem(left)
			add-adaptive-property('left', left)
		left left
	if isNumber(bottom)
		if isRem(bottom) && ENABLE_REM_POLYFILL
			bottom unrem(bottom)
			add-adaptive-property('bottom', bottom)
		bottom bottom
	// relative-prop('top' top, 'right' right, 'bottom' bottom, 'left' left )

margin()
	if length(arguments) == 4
		top = arguments[0]
		right = arguments[1]
		bottom = arguments[2]
		left = arguments[3]

	if length(arguments) == 3
		top = arguments[0]
		right = arguments[1]
		bottom = arguments[2]
		left = arguments[1]

	if length(arguments) == 2
		top = arguments[0]
		right = arguments[1]
		bottom = arguments[0]
		left = arguments[1]

	if length(arguments) == 1
		top = arguments[0]
		right = arguments[0]
		bottom = arguments[0]
		left = arguments[0]

	if( (allIsNumber(arguments)) && allIsRem(arguments) ) && ENABLE_REM_POLYFILL
		add-adaptive-property('margin', arguments)
	elseif ENABLE_REM_POLYFILL
		if isNumber(top) && isRem(top)
			add-adaptive-property('margin-top', top)
			if !allIsNumber(arguments)
				margin-top unrem(top)

		if isNumber(right) && isRem(right)
			add-adaptive-property('margin-right', right)
			if !allIsNumber(arguments)
				margin-right unrem(right)

		if isNumber(bottom) && isRem(bottom)
			add-adaptive-property('margin-bottom', bottom)
			if !allIsNumber(arguments)
				margin-bottom unrem(bottom)

		if isNumber(left) && isRem(left)
			add-adaptive-property('margin-left', left)
			if !allIsNumber(arguments)
				margin-left unrem(left)

	if allIsRem(arguments) && allIsNumber(arguments)
		margin arguments
	else
		if isNumber(top)
			margin-top top
		if isNumber(right)
			margin-right right
		if isNumber(bottom)
			margin-bottom bottom
		if isNumber(left)
			margin-left left

padding()
	if length(arguments) == 4
		top = arguments[0]
		right = arguments[1]
		bottom = arguments[2]
		left = arguments[3]

	if length(arguments) == 3
		top = arguments[0]
		right = arguments[1]
		bottom = arguments[2]
		left = arguments[1]

	if length(arguments) == 2
		top = arguments[0]
		right = arguments[1]
		bottom = arguments[0]
		left = arguments[1]

	if length(arguments) == 1
		top = arguments[0]
		right = arguments[0]
		bottom = arguments[0]
		left = arguments[0]

	if( (allIsNumber(arguments)) && allIsRem(arguments) ) && ENABLE_REM_POLYFILL
		if allIsRem(arguments)
			add-adaptive-property('padding', arguments)
			padding unrem(top) unrem(right) unrem(bottom) unrem(left)
		else
			if isRem(top)
				padding-top unrem(top)
			if isRem(right)
				padding-right unrem(right)
			if isRem(left)
				padding-left unrem(left)
			if isRem(bottom)
				padding-bottom unrem(bottom)
	elseif ENABLE_REM_POLYFILL
		if isNumber(top) && isRem(top)
			add-adaptive-property('padding-top', top)
		if isNumber(right) && isRem(right)
			add-adaptive-property('padding-right', right)
		if isNumber(bottom) && isRem(bottom)
			add-adaptive-property('padding-bottom', bottom)
		if isNumber(left) && isRem(left)
			add-adaptive-property('padding-left', left)

	if allIsRem(arguments) && allIsNumber(arguments)
		padding arguments
	else
		if isNumber(top)
			padding-top top
		if isNumber(right)
			padding-right right
		if isNumber(bottom)
			padding-bottom bottom
		if isNumber(left)
			padding-left left

opacity(val)
	if( val >= 0 )
		if val > 1
			val = val/100
		zoom 1
		-ms-filter unquote('progid:DXImageTransform.Microsoft.Alpha(Opacity="' + val*100 + '")')
		filter unquote('alpha(opacity=' + val*100 + ')')
		opacity val
	else
		opacity val

gr(startColor, endColor)
	background: -moz-linear-gradient(top,  startColor 0%, endColor 100%);
	background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,startColor), color-stop(100%, endColor));
	background: -webkit-linear-gradient(top,  startColor 0%, endColor 100%);
	background: -o-linear-gradient(top,  startColor 0%, endColor 100%);
	background: -ms-linear-gradient(top,  startColor 0%, endColor 100%);
	background: linear-gradient(to bottom,  startColor 0%, endColor 100%);

// font-size(val)
// 	if(typeof(val) == 'unit' && unit(val) == 'rem')
// 		add-adaptive-property('font-size', val)
// 		add-property('font-size', unrem(val))
// 	add-property('font-size', val)

font-tahoma()
	font-family Tahoma, Arial, sans-serif
	line-height 1.2em
	font-weight 400
font-open-sans-reg()
	font-family Open-Sans-Reg, Arial, sans-serif
	font-weight 400
font-open-sans-sb()
	font-family Open-Sans-SemiBold, Arial, sans-serif
	font-weight 400
font-open-sans-it()
	font-family Open-Sans-Italic, Arial, sans-serif
	font-weight 400
html
	font-tahoma()
.popup
	position absolute
	pos 0
	size 100%
	z-index 99999
	display none
	background rgba(222,222,222,.64)

	&.__visible
		&.__last
			display block

	&-box
		position absolute
		pos 0
		margin auto
		width 700px
		max-width 95%
		min-width 260px
		max-height 90%
		max-height calc(100vh - 100px)
		padding 0 12px
		background transparent
		overflow auto
	&-inner
		//max-height 100%
		padding 15px 0 27px
		background #fff
	&-close
		position absolute
		top -46px
		right -40px
		color #fff
		cursor pointer
	&-title
		margin 0 -12px 28px
		padding 6px 47px
		font-open-sans-sb()
		font-size 20px
		color #fff
		background linear-gradient(to top, #70b07a 32%, #98dba3)
		position relative
		&:before,
		&:after
			content ''
			position absolute
			bottom -12px
			width 0
			height 0
			border-top 12px solid #98dba3
		&:before
			border-left 12px solid transparent
			left 0
		&:after
			border-right 12px solid transparent
			right 0

	&-subtitle
		margin-bottom 20px
	&-title + &-subtitle
		margin-top -20px
	&-content
		padding 0 40px
		//&,
		//p
		//	font-size (14px)
		//	line-height (17px)
		//p
		//	margin 0 0 20px

		//.form-submit
		//	text-align right
	&-bottom
		margin-top 30px
		text-align center

	&.__loading
		cursor progress
		.popup-inner:after
			display block
			content ''
			size 48px
			margin 40px auto
			background images('preloader-48.gif') center no-repeat
		.popup-inner > *
			display none
	+MEDIA("TABLET")
		&-close
			right 0
	+MEDIA("PHONE")
		&-box
			max-size 100%
			size 100%
			min-size 0
		&-close
			top 25px
			right 10px
			background-image images('icons/popup-close__black.png')
		&.__installment
			.popup
				&-content
					margin-left -20px
					margin-right -20px
				&-title
					margin-left -20px
					margin-right -20px
					padding 0
.aside
	padding 8px 9px
	box-shadow 0 0 10px 0 rgba(77,38,0,.25)
	&-nav
		margin-bottom 34px
		&-item
			margin-bottom 3px
			&:last-child
				margin-bottom 0
		&-link
			display block
			padding 0 5px 0 19px
			border-radius 3px
			border 1px solid #469352
			outline none
			box-shadow 1px 1px 1px 0 rgba(51,51,51,.75)
			background #449150
			background linear-gradient(to top, #449150, #449150 49%, #70b07a 54%, #70b07a)
			font-open-sans-reg()
			font-size 15px
			line-height 44px
			color #fff
			text-decoration none
			text-align left
			text-shadow 1px 1px 1px #000
			&:hover
				background #70b07a
				background linear-gradient(to bottom, #449150, #449150 49%, #70b07a 54%, #70b07a)
			&.__active
				border-color #d60f0f
				background images('background/aside-nav-bg.png') repeat-x 0 0
				position relative
				&:before
					content ''
					position absolute
					top -1px
					right -16px
					sprite(aside-nav-triangle)
	&-form
		position relative
		margin-bottom 30px
		&:before
			content ''
			position absolute
			top 50%
			right 8px
			sprite(search-red)
			margin-top -8px
			pointer-events none
			z-index 1
		&-search
			box-shadow inset 3px 3px 1px 0 rgba(0,0,0,.05)
			border none
			outline none
			background linear-gradient(to bottom, #f7f7f7, #fff)
			padding 0 43px 0 12px
			font-size 14px
			line-height 30px
			color #ccc
			font-style italic
			placeholder(1, #ccc)
		&-submit[type="submit"]
			position absolute
			top 0
			bottom 0
			right 0
			width 31px
			background #f3e5cc
			border none
			outline none
			border-radius 2px
			font-size 0

.call
	text-align right
	&-online
		margin-bottom 7px
		margin-right 5px
		display block
		font-family Tahoma, Arial, sans-serif
		font-size 14px
		line-height 1.2em
		color #000
		text-decoration underline
	&-tel
		font-family Open-Sans-Reg, Arial, sans-serif
		font-size 30px
		line-height 1.2em
		color #666
		text-decoration none
		&:hover
			text-decoration underline
.container
	margin 0 auto
	width 1090px
	padding 0 10px
	&-wrapper
		box-shadow 0 0 10px 0 rgba(77,38,0,.25)
		background #fff
	&-table
		display table
		width 100%
		box-shadow 0 0 10px 0 rgba(77,38,0,.25)
		background #fff
	&-aside
		display table-cell
		width 224px
	&-content
		display table-cell
.content
	background images('background/main-bg.jpg') no-repeat center top
	background-size cover
	padding-top 7px
	.container
		padding-bottom 28px
.footer
	padding 17px 0
	background #955f35
	border-bottom 14px solid #ec2720
	min-width 1090px
	&-up
		margin-bottom 18px
	.container
		padding 0 25px 0 43px
	&-logo
		display block
		float left
		margin-right 190px
		margin-top 25px
	&-call
		display block
		float left
		.call
			&-online
				color #f3e5cc
			&-tel
				color #fff
	&-social
		display block
		float right
		margin-top 3px
		margin-right 105px
	&-copyright
		margin-right 92px
		float left
		font-family Tahoma, Arial, sans-serif
		font-size 14px
		line-height 1.2em
		color #f3e5cc
	&-menu
		float left
		font-size 0
		&-item
			display inline-block
			vertical-align top
			margin-right 25px
		&-link
			display block
			font-family Tahoma, Arial, sans-serif
			font-size 15px
			line-height 1.2em
			font-weight 700
			color #f3e5cc
			text-decoration none
			&:last-child
				margin-right 0
			&:hover
				text-decoration underline
	&-design
		float right
		min-width 208px
		font-family Tahoma, Arial, sans-serif
		font-size 14px
		line-height 1.2em
		font-weight 700
		color #f3e5cc

.header
	padding 30px 0 20px
	box-shadow 0 0 10px 0 rgba(77,38,0,.25)
	border-top 12px solid #ec2720
	position relative
	z-index 1
	min-width 1090px
	.container
		padding 0 40px 0 35px
	&-logo
		float left
		margin-right 76px
	&-call
		float left
		margin-top 7px
	&-login
		display block
		float right
		margin-top 2px
		padding-left 25px
		max-width 250px
		text-decoration none
		position relative
		&:before
			content ''
			position absolute
			top 4px
			left 0
			sprite(login)
		span
			display inline-block
			vertical-align top
			max-width 100%
			overflow hidden
			text-overflow ellipsis
			white-space nowrap
			font-family Tahoma, Arial,sans-serif
			font-size 20px
			line-height 1.2em
			color #5b925c
			text-decoration none
			border-bottom 1px dashed #5b925c
			&:hover
				border-bottom none
.logo
	line-height 0
	&-img
		max-width 100%
	&-slogan
		margin 5px 0 0 112px
		font-family Tahoma, Arial, sans-serif
		font-size 16px
		line-height 1.2em
		color #000
		letter-spacing .05em;
		text-transform uppercase

.main-feature
	border 1px solid #f3e5cc
	border-radius 3px
	padding 27px 27px 215px
	font-family Tahoma, Arial, sans-serif
	font-size 15px
	line-height 1.3em
	color #333
	position relative
	min-height 655px
	&:hover
		background #fcf8ec
		background linear-gradient(to right, #fcf8ec, #fffdf9 39%, #fffdf9 63%, #fcf8ec);
		.main-feature-bottom
			background radial-gradient(transparent 50%, rgba(237,210,166,1)) no-repeat center 40px
	&.__system
		.main-feature-bottom
			background images('background/main-feature-bg-1.jpg') no-repeat center bottom
			background-size 100% auto
	&.__order
		.main-feature-bottom
			background images('background/main-feature-bg-2.jpg') no-repeat center bottom
			background-size 100% auto
	&.__menu
		.main-feature-bottom
			background images('background/main-feature-bg-3.jpg') no-repeat center bottom
			background-size 100% auto
	h3
		margin-bottom 11px
		font-family Open-Sans-SemiBold, Arial, sans-serif
		font-size 20px
		line-height 1.2em
		color #000
		font-weight 400
		text-transform uppercase
		text-align center
	&-icon
		margin-bottom 10px
		min-height 45px
		text-align center
		position relative
		span
			display inline-block
		for val in cutlery pad hat
			&.__{val}
				span
					sprite(val+'-green')
		&:before,
		&:after
			content ''
			position absolute
			top 50%
			width 40%
			height 1px
			background #ccc
		&:before
			left 0
		&:after
			right 0
	ul
		margin-bottom 5px
		li
			padding-left 33px
			margin-bottom 13px
			&:last-child
				margin-bottom 0
			position relative
			&:before
				content ''
				position absolute
				top 5px
				left 0
				width 12px
				height 7px
				transform rotate(-45deg)
				border-left 3px solid #ec2720
				border-bottom 3px solid #ec2720
	&-bottom
		position absolute
		bottom 0
		left 0
		right 0
		padding-bottom 63.8%
		background radial-gradient(transparent 50%, rgba(237,210,166,.7)) no-repeat center 40px
		img
			position absolute
			bottom 0
			left 0
			right 0
			width 100%
		span
			position absolute
			bottom 14px
			left 19px
			font-family Open-Sans-SemiBold, Arial, sans-serif
			font-size 20px
			line-height 1.2em
			color #987552
			text-transform uppercase
			text-shadow 0 1px 1px #fff
	&-link
		display block
		position absolute
		right 38px
		font-family Open-Sans-SemiBold, Arial, sans-serif
		font-size 15px
		line-height 35px
		color #559c61
	&-btn
		display block
		position absolute
		right 28px
		padding 0 14px 0 25px
		border-radius 2px
		background #f6e9d4
		font-family Open-Sans-SemiBold, Arial, sans-serif
		font-size 14px
		line-height 35px
		color #333
		text-transform uppercase
		text-decoration none
		text-shadow 1px 1px 0 #fff
		span
			position absolute
			top 50%
			left -13px
			margin-top -12px
			width 26px
			height 24px
			border-radius 50%
			background-color #98dba3
			&:before
				content ''
				position absolute
				top 50%
				left 50%
				margin-top -8px
				margin-left -9px
				sprite(arrow-right)
		&:hover
			text-decoration underline
			span
				background-color #ec2720


.main-features
	padding 15px 15px 35px
	font-size 0
	&-item
		display inline-block
		vertical-align top
		width 33%
		margin-right .5%
		&:last-child
			margin-right 0

.main-slider
	border-bottom 16px solid #c8a179
.registration
	&-wrapper
		margin-bottom 35px
	&-alert
		float left
		font-size 12px
		line-height 32px
		color #cc0000
	&-btn
		float right
	&-text
		font-open-sans-it()
		font-size 14px
		color #333
		text-align center
	&-textarea
		min-height 74px
.__registration
	.popup
		&-content
			padding-left 36px
			padding-right 69px
		&-box
			width 540px
			padding-bottom 5px
		&-inner
			width 494px
			box-shadow 2px 2px 5px 0 rgba(61,50,38,.35)

.social
	font-size 0
	&-item
		display inline-block
		vertical-align top
		margin-right 8px
		&:last-child
			margin-right 0
	&-link
		display block
		width 30px
		height 30px
		for val in vk fb twitter
			&.__{val}
				sprite(val + '-footer')
			&:hover
				&.__{val}
					sprite(val + '-footer-hover')
		//&.__vk
		//	sprite(vk-footer)
		//&.__fb
		//	sprite(fb-footer)
		//&.__twitter
		//	sprite(twitter-footer)